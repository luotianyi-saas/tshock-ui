server {
        # if using server not allow 80/443
        listen 12712 ssl http2 default_server;
        # end if

        # if using server allow 80/443
        listen 80 ssl;
        # this not error, port 80 will use ssl to produce error 497
        listen 443 ssl http2;
        # end if

        # configuration from https://ssl-config.mozilla.org/
        ssl_certificate           /path/to/fullchain;
        ssl_certificate_key       /path/to/key;
        ssl_trusted_certificate   /path/to/ca;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # End if
        server_name tshock-ui.example.com;
        error_page 497 https://$host$uri?$args;
        root /srv/http/tshock-ui;
        index index.html;
        

        location = / {
                return 302 /admin;
        }

        location /api {
                rewrite ^/api(.*) $1 break;
                proxy_redirect off;
                # tshock api backend
                proxy_pass http://127.0.0.1:17878;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /admin {
                try_files $uri $uri/ =404;
        }
}
